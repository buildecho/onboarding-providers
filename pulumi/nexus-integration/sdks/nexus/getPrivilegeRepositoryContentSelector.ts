// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getPrivilegeRepositoryContentSelector(args: GetPrivilegeRepositoryContentSelectorArgs, opts?: pulumi.InvokeOptions): Promise<GetPrivilegeRepositoryContentSelectorResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nexus:index/getPrivilegeRepositoryContentSelector:getPrivilegeRepositoryContentSelector", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPrivilegeRepositoryContentSelector.
 */
export interface GetPrivilegeRepositoryContentSelectorArgs {
    name: string;
}

/**
 * A collection of values returned by getPrivilegeRepositoryContentSelector.
 */
export interface GetPrivilegeRepositoryContentSelectorResult {
    readonly actions: string[];
    readonly contentSelector: string;
    readonly description: string;
    readonly format: string;
    readonly id: string;
    readonly name: string;
    readonly readonly: boolean;
    readonly repository: string;
}
export function getPrivilegeRepositoryContentSelectorOutput(args: GetPrivilegeRepositoryContentSelectorOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPrivilegeRepositoryContentSelectorResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("nexus:index/getPrivilegeRepositoryContentSelector:getPrivilegeRepositoryContentSelector", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getPrivilegeRepositoryContentSelector.
 */
export interface GetPrivilegeRepositoryContentSelectorOutputArgs {
    name: pulumi.Input<string>;
}
