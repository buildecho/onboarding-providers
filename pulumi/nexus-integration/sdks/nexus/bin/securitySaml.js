"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SecuritySaml = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class SecuritySaml extends pulumi.CustomResource {
    /**
     * Get an existing SecuritySaml resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SecuritySaml(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SecuritySaml.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecuritySaml.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["emailAttribute"] = state ? state.emailAttribute : undefined;
            resourceInputs["entityId"] = state ? state.entityId : undefined;
            resourceInputs["firstNameAttribute"] = state ? state.firstNameAttribute : undefined;
            resourceInputs["groupsAttribute"] = state ? state.groupsAttribute : undefined;
            resourceInputs["idpMetadata"] = state ? state.idpMetadata : undefined;
            resourceInputs["lastNameAttribute"] = state ? state.lastNameAttribute : undefined;
            resourceInputs["usernameAttribute"] = state ? state.usernameAttribute : undefined;
            resourceInputs["validateAssertionSignature"] = state ? state.validateAssertionSignature : undefined;
            resourceInputs["validateResponseSignature"] = state ? state.validateResponseSignature : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.idpMetadata === undefined) && !opts.urn) {
                throw new Error("Missing required property 'idpMetadata'");
            }
            if ((!args || args.usernameAttribute === undefined) && !opts.urn) {
                throw new Error("Missing required property 'usernameAttribute'");
            }
            resourceInputs["emailAttribute"] = args ? args.emailAttribute : undefined;
            resourceInputs["entityId"] = args ? args.entityId : undefined;
            resourceInputs["firstNameAttribute"] = args ? args.firstNameAttribute : undefined;
            resourceInputs["groupsAttribute"] = args ? args.groupsAttribute : undefined;
            resourceInputs["idpMetadata"] = args ? args.idpMetadata : undefined;
            resourceInputs["lastNameAttribute"] = args ? args.lastNameAttribute : undefined;
            resourceInputs["usernameAttribute"] = args ? args.usernameAttribute : undefined;
            resourceInputs["validateAssertionSignature"] = args ? args.validateAssertionSignature : undefined;
            resourceInputs["validateResponseSignature"] = args ? args.validateResponseSignature : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecuritySaml.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.SecuritySaml = SecuritySaml;
/** @internal */
SecuritySaml.__pulumiType = 'nexus:index/securitySaml:SecuritySaml';
//# sourceMappingURL=securitySaml.js.map