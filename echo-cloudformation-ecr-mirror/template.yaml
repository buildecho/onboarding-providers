AWSTemplateFormatVersion: '2010-09-09'
Description: 'ECR Pullthrough Cache Rule for private registry integration'

Parameters:
  SourceRegistryAccountId:
    Type: String
    Description: 'The AWS account ID of the source ECR registry (Echo registry) - Get this from Echo platform'
    AllowedPattern: '^[0-9]{12}$'
    ConstraintDescription: 'Must be a valid 12-digit AWS account ID'
  
  SourceRegistryRegion:
    Type: String
    Description: 'The AWS region of the source ECR registry (Echo registry) - Get this from Echo platform'
    Default: 'us-east-1'
    AllowedValues:
      - us-east-1
  
  RepositoryNamePrefix:
    Type: String
    Description: 'Optional prefix for cached repository names - This will be the prefix in your registry'
    Default: 'echo'
  
  CacheRuleName:
    Type: String
    Description: 'Name for the pullthrough cache rule'
    Default: 'echo-registry-cache'
    AllowedPattern: '^[a-z0-9]+([._-][a-z0-9]+)*$'
    ConstraintDescription: 'Must contain only lowercase letters, numbers, periods, hyphens, and underscores'

Resources:
  ECRPullthroughCacheRule:
    Type: AWS::ECR::PullThroughCacheRule
    Properties:
      EcrRepositoryPrefix: !Ref RepositoryNamePrefix
      UpstreamRegistry: 'ecr'
      UpstreamRegistryUrl: !Sub '${SourceRegistryAccountId}.dkr.ecr.${SourceRegistryRegion}.amazonaws.com'
      UpstreamRepositoryPrefix: 'ROOT'
      # Use CustomRoleArn for ECR private-to-private pullthrough cache
      CustomRoleArn: !GetAtt ECRAccessRole.Arn

  # IAM Role for ECR access
  ECRAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${CacheRuleName}-ecr-access-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: pullthroughcache.ecr.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ECRPullthroughCachePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchImportUpstreamImage
                  - ecr:GetImageCopyStatus
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                  - ecr:PutImage
                Resource: '*'

Outputs:
  RepositoryPrefix:
    Description: 'Repository prefix for cached images'
    Value: !Ref RepositoryNamePrefix
    Export:
      Name: !Sub '${AWS::StackName}-Repository-Prefix'
  
  UpstreamRegistryUrl:
    Description: 'Echo registry URL'
    Value: !Sub '${SourceRegistryAccountId}.dkr.ecr.${SourceRegistryRegion}.amazonaws.com'
    Export:
      Name: !Sub '${AWS::StackName}-Upstream-Registry-Url'
  
  AccessRoleArn:
    Description: 'ARN of the ECR access role'
    Value: !GetAtt ECRAccessRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-Access-Role-Arn'
  
  UsageInstructions:
    Description: 'Instructions for using the pullthrough cache'
    Value: !Sub |
      To pull images through this cache, use:
      docker pull ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${RepositoryNamePrefix}/[REPOSITORY_NAME]:[TAG]
      
      Example:
      docker pull ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${RepositoryNamePrefix}/my-app:latest
      
      Note: For cross-account access, ensure the upstream registry has the appropriate registry permissions policy. 