// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getBlobstoreFile(args: GetBlobstoreFileArgs, opts?: pulumi.InvokeOptions): Promise<GetBlobstoreFileResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nexus:index/getBlobstoreFile:getBlobstoreFile", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBlobstoreFile.
 */
export interface GetBlobstoreFileArgs {
    name: string;
}

/**
 * A collection of values returned by getBlobstoreFile.
 */
export interface GetBlobstoreFileResult {
    readonly availableSpaceInBytes: number;
    readonly blobCount: number;
    readonly id: string;
    readonly name: string;
    readonly path: string;
    readonly softQuotas: outputs.GetBlobstoreFileSoftQuota[];
    readonly totalSizeInBytes: number;
}
export function getBlobstoreFileOutput(args: GetBlobstoreFileOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetBlobstoreFileResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("nexus:index/getBlobstoreFile:getBlobstoreFile", {
        "name": args.name,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getBlobstoreFile.
 */
export interface GetBlobstoreFileOutputArgs {
    name: pulumi.Input<string>;
}
