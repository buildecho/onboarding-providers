// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class PrivilegeApplication extends pulumi.CustomResource {
    /**
     * Get an existing PrivilegeApplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PrivilegeApplicationState, opts?: pulumi.CustomResourceOptions): PrivilegeApplication {
        return new PrivilegeApplication(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nexus:index/privilegeApplication:PrivilegeApplication';

    /**
     * Returns true if the given object is an instance of PrivilegeApplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PrivilegeApplication {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PrivilegeApplication.__pulumiType;
    }

    /**
     * A list of allowed actions. For a list of applicable values see
     * https://help.sonatype.com/repomanager3/nexus-repository-administration/access-control/privileges#Privileges-PrivilegeTypes
     */
    public readonly actions!: pulumi.Output<string[]>;
    /**
     * A description
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A domain
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * The name of the privilege. This value cannot be changed.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a PrivilegeApplication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PrivilegeApplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PrivilegeApplicationArgs | PrivilegeApplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PrivilegeApplicationState | undefined;
            resourceInputs["actions"] = state ? state.actions : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as PrivilegeApplicationArgs | undefined;
            if ((!args || args.actions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'actions'");
            }
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            resourceInputs["actions"] = args ? args.actions : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PrivilegeApplication.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering PrivilegeApplication resources.
 */
export interface PrivilegeApplicationState {
    /**
     * A list of allowed actions. For a list of applicable values see
     * https://help.sonatype.com/repomanager3/nexus-repository-administration/access-control/privileges#Privileges-PrivilegeTypes
     */
    actions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A description
     */
    description?: pulumi.Input<string>;
    /**
     * A domain
     */
    domain?: pulumi.Input<string>;
    /**
     * The name of the privilege. This value cannot be changed.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PrivilegeApplication resource.
 */
export interface PrivilegeApplicationArgs {
    /**
     * A list of allowed actions. For a list of applicable values see
     * https://help.sonatype.com/repomanager3/nexus-repository-administration/access-control/privileges#Privileges-PrivilegeTypes
     */
    actions: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A description
     */
    description?: pulumi.Input<string>;
    /**
     * A domain
     */
    domain: pulumi.Input<string>;
    /**
     * The name of the privilege. This value cannot be changed.
     */
    name?: pulumi.Input<string>;
}
