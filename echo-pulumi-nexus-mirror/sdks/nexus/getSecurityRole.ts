// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getSecurityRole(args: GetSecurityRoleArgs, opts?: pulumi.InvokeOptions): Promise<GetSecurityRoleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("nexus:index/getSecurityRole:getSecurityRole", {
        "roleid": args.roleid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecurityRole.
 */
export interface GetSecurityRoleArgs {
    roleid: string;
}

/**
 * A collection of values returned by getSecurityRole.
 */
export interface GetSecurityRoleResult {
    readonly description: string;
    readonly id: string;
    readonly name: string;
    readonly privileges: string[];
    readonly roleid: string;
    readonly roles: string[];
}
export function getSecurityRoleOutput(args: GetSecurityRoleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSecurityRoleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("nexus:index/getSecurityRole:getSecurityRole", {
        "roleid": args.roleid,
    }, opts, utilities.getPackage());
}

/**
 * A collection of arguments for invoking getSecurityRole.
 */
export interface GetSecurityRoleOutputArgs {
    roleid: pulumi.Input<string>;
}
