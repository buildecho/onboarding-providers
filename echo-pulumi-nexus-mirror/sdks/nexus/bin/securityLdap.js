"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityLdap = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class SecurityLdap extends pulumi.CustomResource {
    /**
     * Get an existing SecurityLdap resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SecurityLdap(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SecurityLdap.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecurityLdap.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["authPassword"] = state ? state.authPassword : undefined;
            resourceInputs["authRealm"] = state ? state.authRealm : undefined;
            resourceInputs["authSchema"] = state ? state.authSchema : undefined;
            resourceInputs["authUsername"] = state ? state.authUsername : undefined;
            resourceInputs["connectionRetryDelaySeconds"] = state ? state.connectionRetryDelaySeconds : undefined;
            resourceInputs["connectionTimeoutSeconds"] = state ? state.connectionTimeoutSeconds : undefined;
            resourceInputs["groupBaseDn"] = state ? state.groupBaseDn : undefined;
            resourceInputs["groupIdAttribute"] = state ? state.groupIdAttribute : undefined;
            resourceInputs["groupMemberAttribute"] = state ? state.groupMemberAttribute : undefined;
            resourceInputs["groupMemberFormat"] = state ? state.groupMemberFormat : undefined;
            resourceInputs["groupObjectClass"] = state ? state.groupObjectClass : undefined;
            resourceInputs["groupSubtree"] = state ? state.groupSubtree : undefined;
            resourceInputs["groupType"] = state ? state.groupType : undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["ldapGroupsAsRoles"] = state ? state.ldapGroupsAsRoles : undefined;
            resourceInputs["maxIncidentCount"] = state ? state.maxIncidentCount : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["searchBase"] = state ? state.searchBase : undefined;
            resourceInputs["useTrustStore"] = state ? state.useTrustStore : undefined;
            resourceInputs["userBaseDn"] = state ? state.userBaseDn : undefined;
            resourceInputs["userEmailAddressAttribute"] = state ? state.userEmailAddressAttribute : undefined;
            resourceInputs["userIdAttribute"] = state ? state.userIdAttribute : undefined;
            resourceInputs["userLdapFilter"] = state ? state.userLdapFilter : undefined;
            resourceInputs["userMemberOfAttribute"] = state ? state.userMemberOfAttribute : undefined;
            resourceInputs["userObjectClass"] = state ? state.userObjectClass : undefined;
            resourceInputs["userPasswordAttribute"] = state ? state.userPasswordAttribute : undefined;
            resourceInputs["userRealNameAttribute"] = state ? state.userRealNameAttribute : undefined;
            resourceInputs["userSubtree"] = state ? state.userSubtree : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.authSchema === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authSchema'");
            }
            if ((!args || args.authUsername === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authUsername'");
            }
            if ((!args || args.connectionRetryDelaySeconds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionRetryDelaySeconds'");
            }
            if ((!args || args.connectionTimeoutSeconds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionTimeoutSeconds'");
            }
            if ((!args || args.groupType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupType'");
            }
            if ((!args || args.host === undefined) && !opts.urn) {
                throw new Error("Missing required property 'host'");
            }
            if ((!args || args.maxIncidentCount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maxIncidentCount'");
            }
            if ((!args || args.port === undefined) && !opts.urn) {
                throw new Error("Missing required property 'port'");
            }
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            if ((!args || args.searchBase === undefined) && !opts.urn) {
                throw new Error("Missing required property 'searchBase'");
            }
            resourceInputs["authPassword"] = (args === null || args === void 0 ? void 0 : args.authPassword) ? pulumi.secret(args.authPassword) : undefined;
            resourceInputs["authRealm"] = args ? args.authRealm : undefined;
            resourceInputs["authSchema"] = args ? args.authSchema : undefined;
            resourceInputs["authUsername"] = args ? args.authUsername : undefined;
            resourceInputs["connectionRetryDelaySeconds"] = args ? args.connectionRetryDelaySeconds : undefined;
            resourceInputs["connectionTimeoutSeconds"] = args ? args.connectionTimeoutSeconds : undefined;
            resourceInputs["groupBaseDn"] = args ? args.groupBaseDn : undefined;
            resourceInputs["groupIdAttribute"] = args ? args.groupIdAttribute : undefined;
            resourceInputs["groupMemberAttribute"] = args ? args.groupMemberAttribute : undefined;
            resourceInputs["groupMemberFormat"] = args ? args.groupMemberFormat : undefined;
            resourceInputs["groupObjectClass"] = args ? args.groupObjectClass : undefined;
            resourceInputs["groupSubtree"] = args ? args.groupSubtree : undefined;
            resourceInputs["groupType"] = args ? args.groupType : undefined;
            resourceInputs["host"] = args ? args.host : undefined;
            resourceInputs["ldapGroupsAsRoles"] = args ? args.ldapGroupsAsRoles : undefined;
            resourceInputs["maxIncidentCount"] = args ? args.maxIncidentCount : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["searchBase"] = args ? args.searchBase : undefined;
            resourceInputs["useTrustStore"] = args ? args.useTrustStore : undefined;
            resourceInputs["userBaseDn"] = args ? args.userBaseDn : undefined;
            resourceInputs["userEmailAddressAttribute"] = args ? args.userEmailAddressAttribute : undefined;
            resourceInputs["userIdAttribute"] = args ? args.userIdAttribute : undefined;
            resourceInputs["userLdapFilter"] = args ? args.userLdapFilter : undefined;
            resourceInputs["userMemberOfAttribute"] = args ? args.userMemberOfAttribute : undefined;
            resourceInputs["userObjectClass"] = args ? args.userObjectClass : undefined;
            resourceInputs["userPasswordAttribute"] = args ? args.userPasswordAttribute : undefined;
            resourceInputs["userRealNameAttribute"] = args ? args.userRealNameAttribute : undefined;
            resourceInputs["userSubtree"] = args ? args.userSubtree : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["authPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(SecurityLdap.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.SecurityLdap = SecurityLdap;
/** @internal */
SecurityLdap.__pulumiType = 'nexus:index/securityLdap:SecurityLdap';
//# sourceMappingURL=securityLdap.js.map